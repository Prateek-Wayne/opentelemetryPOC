services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./api:/app/api
      - ./observability:/app/observability
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
      - HOST=0.0.0.0
      - PORT=8081
    # command: /bin/sh -c "foreman start -f myprocfile || sleep 2073600‚Äù

  worker_add:
    build:
      context: ./services/add
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/add:/worker
    command: celery -A worker worker --loglevel=info -Q queue_add --concurrency=2

  worker_multiply:
    build:
      context: ./services/multiply
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
      - CELERY_RESULT_BACKEND=redis://redis
    volumes:
      - ./services/multiply:/worker
    command: celery -A worker worker --loglevel=info -Q queue_multiply --concurrency=4

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
  
  redis:
    image: redis:latest

  # Optionally, you can also include Flower for monitoring the Celery tasks
  flower:
    image: mher/flower
    command: celery --broker=amqp://rabbitmq:5672 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq

  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - default
  tempo:
    image: grafana/tempo:1.2.0
    command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - tempo-storage:/var/tempo
      - ./tempo-config.yaml:/etc/tempo.yaml
    ports:
      - "3200" # tempo
      - "4317" # otlp grpc
  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - default
  grafana:
    image: grafana/grafana:latest
    ports:
       - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - default

volumes:  
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  tempo-storage:
    driver: local
  
networks:
  default:
    driver: bridge
